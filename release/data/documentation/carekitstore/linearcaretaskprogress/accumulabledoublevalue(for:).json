{
  "abstract" : [
    {
      "text" : "Convert an outcome value to a double that can be accumulated. If the underlying type is not a numeric,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a default value of ",
      "type" : "text"
    },
    {
      "code" : "1",
      "type" : "codeVoice"
    },
    {
      "text" : " will be used to indicate the existence of some outcome value.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.usc.netreconlab.CareKitEssentials\/documentation\/CareKitStore",
        "doc:\/\/edu.usc.netreconlab.CareKitEssentials\/documentation\/CareKitStore\/LinearCareTaskProgress"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.usc.netreconlab.CareKitEssentials\/documentation\/CareKitStore\/LinearCareTaskProgress\/accumulableDoubleValue(for:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "CareKitStore",
    "externalID" : "s:12CareKitStore06LinearA12TaskProgressV0aB10EssentialsE22accumulableDoubleValue3forSdAA010OCKOutcomeJ0V_tFZ",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "accumulableDoubleValue"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "for"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:12CareKitStore15OCKOutcomeValueV",
        "text" : "OCKOutcomeValue"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sd",
        "text" : "Double"
      }
    ],
    "modules" : [
      {
        "name" : "CareKitStore"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Type Method",
    "symbolKind" : "method",
    "title" : "accumulableDoubleValue(for:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "watchOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "static"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "accumulableDoubleValue"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "for"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "outcomeValue"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/edu.usc.netreconlab.CareKitEssentials\/documentation\/CareKitStore\/OCKOutcomeValue",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:12CareKitStore15OCKOutcomeValueV",
              "text" : "OCKOutcomeValue"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sd",
              "text" : "Double"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/carekitstore\/linearcaretaskprogress\/accumulabledoublevalue(for:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.usc.netreconlab.CareKitEssentials/documentation/CareKitStore": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.usc.netreconlab.CareKitEssentials\/documentation\/CareKitStore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "CareKitStore",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore"
},
"doc://edu.usc.netreconlab.CareKitEssentials/documentation/CareKitStore/LinearCareTaskProgress": {
  "abstract" : [
    {
      "text" : "A structure that defines user progress for a task that can be completed over time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LinearCareTaskProgress"
    }
  ],
  "identifier" : "doc:\/\/edu.usc.netreconlab.CareKitEssentials\/documentation\/CareKitStore\/LinearCareTaskProgress",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LinearCareTaskProgress"
    }
  ],
  "role" : "symbol",
  "title" : "LinearCareTaskProgress",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/linearcaretaskprogress"
},
"doc://edu.usc.netreconlab.CareKitEssentials/documentation/CareKitStore/LinearCareTaskProgress/accumulableDoubleValue(for:)": {
  "abstract" : [
    {
      "text" : "Convert an outcome value to a double that can be accumulated. If the underlying type is not a numeric,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a default value of ",
      "type" : "text"
    },
    {
      "code" : "1",
      "type" : "codeVoice"
    },
    {
      "text" : " will be used to indicate the existence of some outcome value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "accumulableDoubleValue"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12CareKitStore15OCKOutcomeValueV",
      "text" : "OCKOutcomeValue"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    }
  ],
  "identifier" : "doc:\/\/edu.usc.netreconlab.CareKitEssentials\/documentation\/CareKitStore\/LinearCareTaskProgress\/accumulableDoubleValue(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "accumulableDoubleValue(for:)",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/linearcaretaskprogress\/accumulabledoublevalue(for:)"
},
"doc://edu.usc.netreconlab.CareKitEssentials/documentation/CareKitStore/OCKOutcomeValue": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "OCKOutcomeValue",
      "type" : "codeVoice"
    },
    {
      "text" : " is a representation of any response of measurement that a user gives in response to a task. The underlying type could be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "any of a number of types including integers, booleans, dates, text, and binary data, among others.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKOutcomeValue"
    }
  ],
  "identifier" : "doc:\/\/edu.usc.netreconlab.CareKitEssentials\/documentation\/CareKitStore\/OCKOutcomeValue",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKOutcomeValue"
    }
  ],
  "role" : "symbol",
  "title" : "OCKOutcomeValue",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockoutcomevalue"
}
}
}